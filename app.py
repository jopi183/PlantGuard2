import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image
import cv2
import io
import base64

# Konfigurasi halaman
st.set_page_config(
    page_title="PlantGuard",
    page_icon="üå±",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Custom CSS untuk styling
st.markdown("""
<style>
    .main-header {
        font-size: 3rem;
        color: #2E7D32;
        text-align: center;
        margin-bottom: 2rem;
        font-weight: bold;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
    }
    
    .sub-header {
        font-size: 1.5rem;
        color: #388E3C;
        text-align: center;
        margin-bottom: 2rem;
    }
    
    .info-box {
        background: linear-gradient(135deg, #E8F5E8 0%, #C8E6C9 100%);
        padding: 1.5rem;
        border-radius: 15px;
        border-left: 5px solid #4CAF50;
        margin: 1rem 0;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .warning-box {
        background: linear-gradient(135deg, #FFF3E0 0%, #FFE0B2 100%);
        padding: 1.5rem;
        border-radius: 15px;
        border-left: 5px solid #FF9800;
        margin: 1rem 0;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .danger-box {
        background: linear-gradient(135deg, #FFEBEE 0%, #FFCDD2 100%);
        padding: 1.5rem;
        border-radius: 15px;
        border-left: 5px solid #F44336;
        margin: 1rem 0;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .success-box {
        background: linear-gradient(135deg, #E8F5E8 0%, #A5D6A7 100%);
        padding: 1.5rem;
        border-radius: 15px;
        border-left: 5px solid #4CAF50;
        margin: 1rem 0;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .metric-card {
        background: white;
        padding: 1rem;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        text-align: center;
        margin: 0.5rem;
    }
    
    .footer {
        text-align: center;
        color: #666;
        padding: 2rem;
        margin-top: 3rem;
        border-top: 1px solid #eee;
    }
</style>
""", unsafe_allow_html=True)

# Fungsi untuk memuat model
@st.cache_resource
def load_model():
    try:
        model = tf.keras.models.load_model('mobilenetv2_plantvillage.h5')
        return model
    except:
        st.error("‚ö†Ô∏è Model tidak ditemukan! Pastikan file 'mobilenetv2_plantvillage.h5' ada di direktori yang sama.")
        return None

# Fungsi untuk memuat label
@st.cache_data
def load_labels():
    labels = [
        "Pepper Bell - Bacterial Spot",
        "Pepper Bell - Healthy",
        "Potato - Early Blight",
        "Potato - Late Blight", 
        "Potato - Healthy",
        "Tomato - Bacterial Spot",
        "Tomato - Early Blight",
        "Tomato - Late Blight",
        "Tomato - Leaf Mold",
        "Tomato - Septoria Leaf Spot",
        "Tomato - Spider Mites",
        "Tomato - Target Spot",
        "Tomato - Yellow Leaf Curl Virus",
        "Tomato - Mosaic Virus",
        "Tomato - Healthy"
    ]
    return labels

# Fungsi untuk preprocessing gambar
def preprocess_image(image):
    image = image.resize((224, 224))
    image_array = np.array(image) / 255.0
    image_array = np.expand_dims(image_array, axis=0)
    return image_array

# Fungsi untuk prediksi
def predict_disease(model, image):
    processed_image = preprocess_image(image)
    prediction = model.predict(processed_image)
    predicted_class = np.argmax(prediction[0])
    confidence = float(prediction[0][predicted_class])
    return predicted_class, confidence

# Fungsi untuk memberikan saran berdasarkan penyakit
def get_disease_info(disease_name):
    disease_info = {
        "Pepper Bell - Bacterial Spot": {
            "severity": "warning",
            "description": "Bercak bakteri pada paprika yang disebabkan oleh Xanthomonas campestris.",
            "symptoms": "‚Ä¢ Bercak kecil berwarna coklat tua\n‚Ä¢ Daun menguning dan rontok\n‚Ä¢ Buah memiliki bercak kasar",
            "treatment": "‚Ä¢ Gunakan fungisida berbasis tembaga\n‚Ä¢ Hindari penyiraman dari atas\n‚Ä¢ Buang bagian tanaman yang terinfeksi\n‚Ä¢ Rotasi tanaman",
            "prevention": "‚Ä¢ Tanam dengan jarak yang cukup\n‚Ä¢ Pastikan drainase baik\n‚Ä¢ Hindari kelembaban berlebih"
        },
        "Pepper Bell - Healthy": {
            "severity": "success",
            "description": "Tanaman paprika dalam kondisi sehat!",
            "symptoms": "‚Ä¢ Daun hijau segar\n‚Ä¢ Pertumbuhan normal\n‚Ä¢ Tidak ada tanda penyakit",
            "treatment": "‚Ä¢ Lanjutkan perawatan rutin\n‚Ä¢ Berikan pupuk seimbang\n‚Ä¢ Monitor kondisi tanaman",
            "prevention": "‚Ä¢ Jaga kelembaban optimal\n‚Ä¢ Berikan sirkulasi udara baik\n‚Ä¢ Pemupukan teratur"
        },
        "Potato - Early Blight": {
            "severity": "warning",
            "description": "Penyakit hawar awal kentang yang disebabkan oleh Alternaria solani.",
            "symptoms": "‚Ä¢ Bercak coklat dengan lingkaran konsentris\n‚Ä¢ Dimulai dari daun tua\n‚Ä¢ Daun menguning dan layu",
            "treatment": "‚Ä¢ Aplikasi fungisida preventif\n‚Ä¢ Buang daun yang terinfeksi\n‚Ä¢ Perbaiki sirkulasi udara\n‚Ä¢ Kurangi kelembaban",
            "prevention": "‚Ä¢ Rotasi tanaman 3-4 tahun\n‚Ä¢ Tanam varietas tahan\n‚Ä¢ Jaga kebersihan lahan"
        },
        "Potato - Late Blight": {
            "severity": "danger",
            "description": "Penyakit hawar akhir kentang yang sangat berbahaya, disebabkan oleh Phytophthora infestans.",
            "symptoms": "‚Ä¢ Bercak basah berwarna hijau gelap\n‚Ä¢ Lapisan putih di bawah daun\n‚Ä¢ Umbi membusuk\n‚Ä¢ Bau tidak sedap",
            "treatment": "‚Ä¢ Segera aplikasi fungisida sistemik\n‚Ä¢ Buang seluruh bagian terinfeksi\n‚Ä¢ Perbaiki drainase\n‚Ä¢ Kurangi irigasi",
            "prevention": "‚Ä¢ Gunakan bibit bebas penyakit\n‚Ä¢ Hindari penanaman saat musim hujan\n‚Ä¢ Monitor cuaca"
        },
        "Potato - Healthy": {
            "severity": "success",
            "description": "Tanaman kentang dalam kondisi sehat!",
            "symptoms": "‚Ä¢ Daun hijau segar\n‚Ä¢ Pertumbuhan vigorous\n‚Ä¢ Tidak ada gejala penyakit",
            "treatment": "‚Ä¢ Lanjutkan program pemupukan\n‚Ä¢ Monitor perkembangan\n‚Ä¢ Jaga kelembaban tanah",
            "prevention": "‚Ä¢ Rotasi tanaman teratur\n‚Ä¢ Pemupukan berimbang\n‚Ä¢ Pengendalian hama rutin"
        },
        "Tomato - Bacterial Spot": {
            "severity": "warning",
            "description": "Bercak bakteri pada tomat yang disebabkan oleh Xanthomonas spp.",
            "symptoms": "‚Ä¢ Bercak kecil berwarna coklat\n‚Ä¢ Halo kuning di sekitar bercak\n‚Ä¢ Buah berbintik-bintik",
            "treatment": "‚Ä¢ Semprot dengan bakterisida\n‚Ä¢ Buang bagian terinfeksi\n‚Ä¢ Perbaiki sanitasi\n‚Ä¢ Kurangi kelembaban daun",
            "prevention": "‚Ä¢ Gunakan benih bebas patogen\n‚Ä¢ Hindari penyiraman overhead\n‚Ä¢ Sterilisasi alat"
        },
        "Tomato - Early Blight": {
            "severity": "warning",
            "description": "Hawar awal tomat yang disebabkan oleh Alternaria solani.",
            "symptoms": "‚Ä¢ Bercak coklat dengan target spot\n‚Ä¢ Dimulai dari daun bawah\n‚Ä¢ Daun menguning",
            "treatment": "‚Ä¢ Aplikasi fungisida berbasis tembaga\n‚Ä¢ Pruning daun terinfeksi\n‚Ä¢ Mulching untuk mencegah percikan\n‚Ä¢ Perbaiki sirkulasi udara",
            "prevention": "‚Ä¢ Rotasi tanaman\n‚Ä¢ Jarak tanam optimal\n‚Ä¢ Pemupukan kalium cukup"
        },
        "Tomato - Late Blight": {
            "severity": "danger",
            "description": "Hawar akhir tomat, penyakit yang sangat merusak disebabkan oleh Phytophthora infestans.",
            "symptoms": "‚Ä¢ Bercak basah hijau gelap\n‚Ä¢ Lapisan jamur putih\n‚Ä¢ Buah membusuk cepat\n‚Ä¢ Bau busuk",
            "treatment": "‚Ä¢ Segera aplikasi fungisida sistemik\n‚Ä¢ Buang tanaman terinfeksi\n‚Ä¢ Perbaiki drainase\n‚Ä¢ Hindari penyiraman berlebih",
            "prevention": "‚Ä¢ Tanam varietas tahan\n‚Ä¢ Monitor kelembaban\n‚Ä¢ Aplikasi preventif saat cuaca lembab"
        },
        "Tomato - Leaf Mold": {
            "severity": "warning",
            "description": "Jamur daun tomat yang disebabkan oleh Passalora fulva.",
            "symptoms": "‚Ä¢ Bercak kuning di permukaan atas daun\n‚Ä¢ Lapisan jamur abu-abu di bawah daun\n‚Ä¢ Daun mengering",
            "treatment": "‚Ä¢ Tingkatkan sirkulasi udara\n‚Ä¢ Kurangi kelembaban\n‚Ä¢ Aplikasi fungisida\n‚Ä¢ Pruning daun terinfeksi",
            "prevention": "‚Ä¢ Tanam dengan jarak cukup\n‚Ä¢ Ventilasi greenhouse baik\n‚Ä¢ Hindari penyiraman daun"
        },
        "Tomato - Septoria Leaf Spot": {
            "severity": "warning",
            "description": "Bercak daun septoria yang disebabkan oleh Septoria lycopersici.",
            "symptoms": "‚Ä¢ Bercak kecil bulat berwarna abu-abu\n‚Ä¢ Tepi bercak coklat tua\n‚Ä¢ Titik hitam di tengah bercak",
            "treatment": "‚Ä¢ Aplikasi fungisida protektif\n‚Ä¢ Buang daun terinfeksi\n‚Ä¢ Mulching\n‚Ä¢ Avoid overhead watering",
            "prevention": "‚Ä¢ Rotasi tanaman\n‚Ä¢ Sanitasi kebun\n‚Ä¢ Drainase baik"
        },
        "Tomato - Spider Mites": {
            "severity": "warning",
            "description": "Serangan tungau laba-laba yang menyebabkan kerusakan daun.",
            "symptoms": "‚Ä¢ Titik-titik kuning pada daun\n‚Ä¢ Jaring halus di daun\n‚Ä¢ Daun keperakan dan kering",
            "treatment": "‚Ä¢ Semprot dengan mitisida\n‚Ä¢ Tingkatkan kelembaban udara\n‚Ä¢ Gunakan predator alami\n‚Ä¢ Cuci daun dengan air",
            "prevention": "‚Ä¢ Jaga kelembaban optimal\n‚Ä¢ Hindari stress kekeringan\n‚Ä¢ Monitor rutin"
        },
        "Tomato - Target Spot": {
            "severity": "warning",
            "description": "Bercak target pada tomat yang disebabkan oleh Corynespora cassiicola.",
            "symptoms": "‚Ä¢ Bercak bulat dengan lingkaran konsentris\n‚Ä¢ Warna coklat muda hingga tua\n‚Ä¢ Daun menguning dan rontok",
            "treatment": "‚Ä¢ Aplikasi fungisida sistemik\n‚Ä¢ Buang debris tanaman\n‚Ä¢ Perbaiki sirkulasi udara\n‚Ä¢ Mulching",
            "prevention": "‚Ä¢ Rotasi tanaman\n‚Ä¢ Varietas tahan\n‚Ä¢ Sanitasi lahan"
        },
        "Tomato - Yellow Leaf Curl Virus": {
            "severity": "danger",
            "description": "Virus keriting kuning tomat yang ditularkan oleh kutu kebul.",
            "symptoms": "‚Ä¢ Daun mengkerut dan menguning\n‚Ä¢ Pertumbuhan terhambat\n‚Ä¢ Buah kecil dan sedikit\n‚Ä¢ Tanaman kerdil",
            "treatment": "‚Ä¢ Cabut dan musnahkan tanaman terinfeksi\n‚Ä¢ Kendalikan vektor kutu kebul\n‚Ä¢ Gunakan mulsa reflektif\n‚Ä¢ Tanam varietas tahan",
            "prevention": "‚Ä¢ Gunakan jaring serangga\n‚Ä¢ Eliminasi gulma inang\n‚Ä¢ Tanam varietas tahan virus"
        },
        "Tomato - Mosaic Virus": {
            "severity": "danger",
            "description": "Virus mosaik tomat yang menyebabkan pola mozaik pada daun.",
            "symptoms": "‚Ä¢ Pola mozaik hijau muda-tua\n‚Ä¢ Daun kerut dan cacat\n‚Ä¢ Buah belang-belang\n‚Ä¢ Pertumbuhan terhambat",
            "treatment": "‚Ä¢ Cabut tanaman terinfeksi\n‚Ä¢ Sterilisasi alat\n‚Ä¢ Gunakan varietas tahan\n‚Ä¢ Eliminasi gulma inang",
            "prevention": "‚Ä¢ Gunakan benih bebas virus\n‚Ä¢ Sanitasi alat dan tangan\n‚Ä¢ Isolasi tanaman sakit"
        },
        "Tomato - Healthy": {
            "severity": "success",
            "description": "Tanaman tomat dalam kondisi sehat dan optimal!",
            "symptoms": "‚Ä¢ Daun hijau segar dan normal\n‚Ä¢ Pertumbuhan vigorous\n‚Ä¢ Tidak ada gejala penyakit\n‚Ä¢ Produksi buah baik",
            "treatment": "‚Ä¢ Lanjutkan perawatan rutin\n‚Ä¢ Monitor perkembangan\n‚Ä¢ Pemupukan seimbang\n‚Ä¢ Penyiraman teratur",
            "prevention": "‚Ä¢ Rotasi tanaman teratur\n‚Ä¢ Sanitasi kebun\n‚Ä¢ Pemupukan berimbang\n‚Ä¢ Pengendalian hama preventif"
        }
    }
    
    return disease_info.get(disease_name, {
        "severity": "info",
        "description": "Informasi tidak tersedia untuk penyakit ini.",
        "symptoms": "Gejala tidak terdefinisi",
        "treatment": "Konsultasi dengan ahli pertanian",
        "prevention": "Lakukan praktik pertanian yang baik"
    })

# Header aplikasi
st.markdown('<h1 class="main-header">üå± PlantGuard: Plant Disease Detection System</h1>', unsafe_allow_html=True)
st.markdown('<p class="sub-header">Deteksi Penyakit Tanaman dengan Computer Vision</p>', unsafe_allow_html=True)
st.markdown('<p class="sub-header">By: Joshua Pinem</p>', unsafe_allow_html=True)


# Sidebar
with st.sidebar:
    st.header("üîß Pengaturan")
    
    st.markdown("""
    <div class="info-box">
        <h4>üìã Panduan Penggunaan:</h4>
        <ol>
            <li>Pilih metode input (Upload/Kamera)</li>
            <li>Pastikan gambar daun jelas</li>
            <li>Klik "Analisis Gambar"</li>
            <li>Lihat hasil dan rekomendasi</li>
        </ol>
    </div>
    """, unsafe_allow_html=True)
    
    st.markdown("---")
    
    st.markdown("""
    <div class="info-box">
        <h4>üåø Tanaman yang Didukung:</h4>
        ‚Ä¢ Paprika (Pepper Bell)<br>
        ‚Ä¢ Kentang (Potato)<br>
        ‚Ä¢ Tomat (Tomato)
    </div>
    """, unsafe_allow_html=True)

# Load model dan label
model = load_model()
labels = load_labels()

if model is None:
    st.stop()

# Main interface
col1, col2 = st.columns([1, 1])

with col1:
    st.subheader("üì§ Input Gambar")
    
    # Tab untuk upload dan kamera
    tab1, tab2 = st.tabs(["üìÅ Upload File", "üì∑ Kamera"])
    
    image = None
    
    with tab1:
        uploaded_file = st.file_uploader(
            "Pilih gambar daun tanaman",
            type=['png', 'jpg', 'jpeg'],
            help="Upload gambar dengan format PNG, JPG, atau JPEG"
        )
        
        if uploaded_file is not None:
            image = Image.open(uploaded_file)
    
    with tab2:
        camera_image = st.camera_input("Ambil foto daun tanaman")
        
        if camera_image is not None:
            image = Image.open(camera_image)
    
    if image is not None:
        st.image(image, caption="Gambar yang akan dianalisis", use_column_width=True)
        
        # Tombol analisis
        if st.button("üîç Analisis Gambar", type="primary", use_container_width=True):
            with st.spinner("Menganalisis gambar..."):
                try:
                    predicted_class, confidence = predict_disease(model, image)
                    disease_name = labels[predicted_class]
                    disease_info = get_disease_info(disease_name)
                    
                    # Simpan hasil di session state
                    st.session_state.prediction_result = {
                        'disease_name': disease_name,
                        'confidence': confidence,
                        'disease_info': disease_info
                    }
                    
                except Exception as e:
                    st.error(f"Terjadi kesalahan saat analisis: {str(e)}")

with col2:
    st.subheader("üìä Hasil Analisis")
    
    if hasattr(st.session_state, 'prediction_result'):
        result = st.session_state.prediction_result
        disease_name = result['disease_name']
        confidence = result['confidence']
        disease_info = result['disease_info']
        
        # Tampilkan confidence score
        st.metric(
            label="Tingkat Kepercayaan",
            value=f"{confidence*100:.1f}%",
            delta=f"{'Tinggi' if confidence > 0.8 else 'Sedang' if confidence > 0.6 else 'Rendah'}"
        )
        
        # Box hasil berdasarkan severity
        if disease_info['severity'] == 'success':
            st.markdown(f"""
            <div class="success-box">
                <h3>‚úÖ {disease_name}</h3>
                <p>{disease_info['description']}</p>
            </div>
            """, unsafe_allow_html=True)
        elif disease_info['severity'] == 'warning':
            st.markdown(f"""
            <div class="warning-box">
                <h3>‚ö†Ô∏è {disease_name}</h3>
                <p>{disease_info['description']}</p>
            </div>
            """, unsafe_allow_html=True)
        elif disease_info['severity'] == 'danger':
            st.markdown(f"""
            <div class="danger-box">
                <h3>üö® {disease_name}</h3>
                <p>{disease_info['description']}</p>
            </div>
            """, unsafe_allow_html=True)
        
        # Detail informasi
        with st.expander("üìã Detail Gejala"):
            st.markdown(disease_info['symptoms'])
        
        with st.expander("üíä Rekomendasi Pengobatan"):
            st.markdown(disease_info['treatment'])
        
        with st.expander("üõ°Ô∏è Pencegahan"):
            st.markdown(disease_info['prevention'])
            
    else:
        st.markdown("""
        <div class="info-box">
            <h4>üëÜ Silakan upload gambar atau ambil foto</h4>
            <p>Sistem akan menganalisis gambar dan memberikan diagnosis serta rekomendasi perawatan yang sesuai.</p>
        </div>
        """, unsafe_allow_html=True)

# Informasi tambahan
st.markdown("---")

col3, col4, col5 = st.columns(3)

with col3:
    st.markdown("""
    <div class="metric-card">
        <h4>üéØ Akurasi Model</h4>
        <h3>95%+</h3>
        <p>Tingkat akurasi tinggi</p>
    </div>
    """, unsafe_allow_html=True)

with col4:
    st.markdown("""
    <div class="metric-card">
        <h4>üåø Kelas Penyakit</h4>
        <h3>15</h3>
        <p>Jenis penyakit yang dapat dideteksi</p>
    </div>
    """, unsafe_allow_html=True)

with col5:
    st.markdown("""
    <div class="metric-card">
        <h4>‚ö° Kecepatan</h4>
        <h3>< 3s</h3>
        <p>Waktu analisis rata-rata</p>
    </div>
    """, unsafe_allow_html=True)

# Footer
st.markdown("""
<div class="footer">
    <p>üî¨ Dikembangkan menggunakan TensorFlow & MobileNetV2 | 
    üì± Kompatibel dengan perangkat mobile | 
    üå± Untuk kemajuan pertanian berkelanjutan</p>
</div>
""", unsafe_allow_html=True)

# Informasi teknis (tersembunyi)
with st.expander("‚ÑπÔ∏è Informasi Teknis"):
    st.write("**Model**: MobileNetV2 dengan Transfer Learning")
    st.write("**Dataset**: PlantVillage Dataset")
    st.write("**Input Size**: 224x224 pixels")
    st.write("**Framework**: TensorFlow/Keras")

    st.write("**Deployment**: Streamlit")
